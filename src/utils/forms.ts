/**
 * @author rgorai
 * @description reduce a {@link FormSpecs} object into a related object
 * @param formSpecKeys list of keys of FormSpec object
 * @param mutation function returning a [key, value] pairing for each 'formSpecKeys' element
 * @param mutation.currKey the current formSpecKey in the reduction iteration to mutate
 * @returns a new object generated by the 'mutation' reducer
 */
export const reduceFormSpecs = <T>(
  formSpecKeys: Array<keyof FormSpecs<T>>,
  mutation: (
    currKey: keyof FormSpecs<T>
  ) => [newKey: string, newValue: any] | undefined
) =>
  formSpecKeys.reduce((p, c) => {
    const [key, value] = mutation(c) ?? [null]
    return key ? { ...p, [key]: value } : p
  }, {}) as { [newKey: string]: any }
